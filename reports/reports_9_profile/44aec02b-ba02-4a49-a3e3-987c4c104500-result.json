{"name": "test_check", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010248ea80 chromedriver + 4385408\n1   chromedriver                        0x000000010248738c chromedriver + 4354956\n2   chromedriver                        0x00000001020a4b0c chromedriver + 281356\n3   chromedriver                        0x00000001020e72f8 chromedriver + 553720\n4   chromedriver                        0x000000010211fd24 chromedriver + 785700\n5   chromedriver                        0x00000001020dbeec chromedriver + 507628\n6   chromedriver                        0x00000001020dc8c4 chromedriver + 510148\n7   chromedriver                        0x000000010245643c chromedriver + 4154428\n8   chromedriver                        0x000000010245aea0 chromedriver + 4173472\n9   chromedriver                        0x000000010243bff8 chromedriver + 4046840\n10  chromedriver                        0x000000010245b78c chromedriver + 4175756\n11  chromedriver                        0x000000010242efb8 chromedriver + 3993528\n12  chromedriver                        0x000000010247921c chromedriver + 4297244\n13  chromedriver                        0x0000000102479398 chromedriver + 4297624\n14  chromedriver                        0x0000000102486f84 chromedriver + 4353924\n15  libsystem_pthread.dylib             0x0000000199e86f94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x0000000199e81d34 thread_start + 8", "trace": "self = <test_9_profile.TestProfile object at 0x102905700>\n\n    def test_check(self):\n        self.navigating_to_my_profile_page()\n        self.page.find_linkedin_icon()\n        self.click_element(self.page.linkedin_icon)\n        sleep(10)\n>       self.page.find_linkedin_main_logo()\n\ntest_9_profile.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/page_9_profile.py:66: in find_linkedin_main_logo\n    self.linkedin_main_logo = Driver.wait(self.driver, By.XPATH, \"/html/body/nav/a/icon[2]\", \"visit\", 5)\n../utils/Driver.py:14: in wait\n    return WebDriverWait(driver, timeout).until(ec.visibility_of_element_located((selector, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"55e063ef2a28381b188e4dc7ace9b9bb\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x102922980>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010248ea80 chromedriver + 4385408\nE       1   chromedriver                        0x000000010248738c chromedriver + 4354956\nE       2   chromedriver                        0x00000001020a4b0c chromedriver + 281356\nE       3   chromedriver                        0x00000001020e72f8 chromedriver + 553720\nE       4   chromedriver                        0x000000010211fd24 chromedriver + 785700\nE       5   chromedriver                        0x00000001020dbeec chromedriver + 507628\nE       6   chromedriver                        0x00000001020dc8c4 chromedriver + 510148\nE       7   chromedriver                        0x000000010245643c chromedriver + 4154428\nE       8   chromedriver                        0x000000010245aea0 chromedriver + 4173472\nE       9   chromedriver                        0x000000010243bff8 chromedriver + 4046840\nE       10  chromedriver                        0x000000010245b78c chromedriver + 4175756\nE       11  chromedriver                        0x000000010242efb8 chromedriver + 3993528\nE       12  chromedriver                        0x000000010247921c chromedriver + 4297244\nE       13  chromedriver                        0x0000000102479398 chromedriver + 4297624\nE       14  chromedriver                        0x0000000102486f84 chromedriver + 4353924\nE       15  libsystem_pthread.dylib             0x0000000199e86f94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x0000000199e81d34 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "stdout", "source": "62aaaa40-9696-4d67-aa02-5e1080741cd5-attachment.txt", "type": "text/plain"}], "start": 1719962035669, "stop": 1719962068761, "uuid": "8a7bbde4-1dd1-4a19-9957-351dd4a9eca1", "historyId": "9a2955cca547cf3ae94965ba7e9216d3", "testCaseId": "9a2955cca547cf3ae94965ba7e9216d3", "fullName": "tests.test_9_profile.TestProfile#test_check", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_9_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "59576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_9_profile"}]}