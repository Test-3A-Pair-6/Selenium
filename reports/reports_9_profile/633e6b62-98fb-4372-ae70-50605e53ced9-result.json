{"name": "test_shared_profile", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_9_profile.TestProfile object at 0x1047629f0>\n\n    @pytest.mark.navigating_3\n    def test_shared_profile(self):\n>       self.navigating_to_share_dropdown()\n\ntest_9_profile.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_9_profile.py:63: in navigating_to_share_dropdown\n    self.navigating_to_my_profile_page()\ntest_9_profile.py:57: in navigating_to_my_profile_page\n    self.login()\ntest_9_profile.py:28: in login\n    self.page.submit_button()\n../pages/page_9_profile.py:28: in submit_button\n    self.login_button = Driver.wait(self.driver, By.XPATH, \"//button[@type=\\\"submit\\\"]\", \"click\", 50)\n../utils/Driver.py:16: in wait\n    return WebDriverWait(driver, timeout).until(ec.element_to_be_clickable((selector, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c1cdf3b795c6d7af8cff89c3e7291583\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10479dee0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1719953713362, "stop": 1719953763807, "uuid": "564886ff-f33a-48fe-ba1c-9ee0c47e7a29", "historyId": "24733367d79c4d67f51972496736a532", "testCaseId": "24733367d79c4d67f51972496736a532", "fullName": "tests.test_9_profile.TestProfile#test_shared_profile", "labels": [{"name": "tag", "value": "navigating_3"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_9_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "55216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_9_profile"}]}