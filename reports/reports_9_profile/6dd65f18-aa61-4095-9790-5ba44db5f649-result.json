{"name": "test_is_action", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"form-check-input mx-2\" type=\"radio\" name=\"326597\" value=\"5\"> is not clickable at point (1228, 443). Other element would receive the click: <div style=\"display: flex; align-items: flex-end;\">...</div>\n  (Session info: chrome=126.0.6478.127)\nStacktrace:\n0   chromedriver                        0x0000000100c46a80 chromedriver + 4385408\n1   chromedriver                        0x0000000100c3f38c chromedriver + 4354956\n2   chromedriver                        0x000000010085cb0c chromedriver + 281356\n3   chromedriver                        0x00000001008a4ce0 chromedriver + 576736\n4   chromedriver                        0x00000001008a3284 chromedriver + 569988\n5   chromedriver                        0x00000001008a1414 chromedriver + 562196\n6   chromedriver                        0x00000001008a05b0 chromedriver + 558512\n7   chromedriver                        0x0000000100895cfc chromedriver + 515324\n8   chromedriver                        0x0000000100895734 chromedriver + 513844\n9   chromedriver                        0x00000001008d7d24 chromedriver + 785700\n10  chromedriver                        0x0000000100893eec chromedriver + 507628\n11  chromedriver                        0x00000001008948c4 chromedriver + 510148\n12  chromedriver                        0x0000000100c0e43c chromedriver + 4154428\n13  chromedriver                        0x0000000100c12ea0 chromedriver + 4173472\n14  chromedriver                        0x0000000100bf3ff8 chromedriver + 4046840\n15  chromedriver                        0x0000000100c1378c chromedriver + 4175756\n16  chromedriver                        0x0000000100be6fb8 chromedriver + 3993528\n17  chromedriver                        0x0000000100c3121c chromedriver + 4297244\n18  chromedriver                        0x0000000100c31398 chromedriver + 4297624\n19  chromedriver                        0x0000000100c3ef84 chromedriver + 4353924\n20  libsystem_pthread.dylib             0x0000000199e86f94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000199e81d34 thread_start + 8", "trace": "self = <test_9_profile.TestProfile object at 0x1029f97c0>\n\n    def test_is_action(self):\n        self.navigating_to_evaluation_modul()\n        sleep(2)\n        self.driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n        sleep(5)\n        self.page.find_radio_buttons()\n        sleep(3)\n        actions = ActionChains(self.driver)\n    \n        # Iterate through each radio button and click it\n        for radio_button in self.page.radio_buttons:\n            # Ensure the element is clickable before clicking\n            WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable(radio_button))\n    \n            # Scroll to the radio button\n            actions.move_to_element(radio_button).perform()\n    \n            # Click the radio button\n>           radio_button.click()\n\ntest_9_profile.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1029fa1e0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...000199e86f94 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000199e81d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"form-check-input mx-2\" type=\"radio\" name=\"326597\" value=\"5\"> is not clickable at point (1228, 443). Other element would receive the click: <div style=\"display: flex; align-items: flex-end;\">...</div>\nE         (Session info: chrome=126.0.6478.127)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100c46a80 chromedriver + 4385408\nE       1   chromedriver                        0x0000000100c3f38c chromedriver + 4354956\nE       2   chromedriver                        0x000000010085cb0c chromedriver + 281356\nE       3   chromedriver                        0x00000001008a4ce0 chromedriver + 576736\nE       4   chromedriver                        0x00000001008a3284 chromedriver + 569988\nE       5   chromedriver                        0x00000001008a1414 chromedriver + 562196\nE       6   chromedriver                        0x00000001008a05b0 chromedriver + 558512\nE       7   chromedriver                        0x0000000100895cfc chromedriver + 515324\nE       8   chromedriver                        0x0000000100895734 chromedriver + 513844\nE       9   chromedriver                        0x00000001008d7d24 chromedriver + 785700\nE       10  chromedriver                        0x0000000100893eec chromedriver + 507628\nE       11  chromedriver                        0x00000001008948c4 chromedriver + 510148\nE       12  chromedriver                        0x0000000100c0e43c chromedriver + 4154428\nE       13  chromedriver                        0x0000000100c12ea0 chromedriver + 4173472\nE       14  chromedriver                        0x0000000100bf3ff8 chromedriver + 4046840\nE       15  chromedriver                        0x0000000100c1378c chromedriver + 4175756\nE       16  chromedriver                        0x0000000100be6fb8 chromedriver + 3993528\nE       17  chromedriver                        0x0000000100c3121c chromedriver + 4297244\nE       18  chromedriver                        0x0000000100c31398 chromedriver + 4297624\nE       19  chromedriver                        0x0000000100c3ef84 chromedriver + 4353924\nE       20  libsystem_pthread.dylib             0x0000000199e86f94 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000199e81d34 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "stdout", "source": "f3a85d66-585e-48cf-b8f9-e01127c03e56-attachment.txt", "type": "text/plain"}], "start": 1720000938531, "stop": 1720000965687, "uuid": "94cd4bb4-94cc-4eda-9cbe-a2aafb19712c", "historyId": "1d3fd3f6978601fae7e13e3c6d26da62", "testCaseId": "1d3fd3f6978601fae7e13e3c6d26da62", "fullName": "tests.test_9_profile.TestProfile#test_is_action", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_9_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "67425-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_9_profile"}]}