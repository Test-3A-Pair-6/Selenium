{"name": "test_check", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_9_profile.TestProfile object at 0x104d12d20>\n\n    def test_check(self):\n        self.navigating_to_share_dropdown()\n>       self.page.find_switch_button()\n\ntest_9_profile.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/page_9_profile.py:46: in find_switch_button\n    self.switch_button = Driver.wait(self.driver, By.XPATH, \"//*[@id=\\\"__next\\\"]/div/main/div/div/div[1]/div/div[2]/div[1]/div/div/div/div[1]/div/div[1]/div[1]\", \"click\", 5)\n../utils/Driver.py:16: in wait\n    return WebDriverWait(driver, timeout).until(ec.element_to_be_clickable((selector, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"282d18c80d1f210e541872b9b0e3cef8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x104d4b060>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1719864737402, "stop": 1719864747483, "uuid": "5941de4c-b832-4b0d-879f-18b7c3ae16a2", "historyId": "9a2955cca547cf3ae94965ba7e9216d3", "testCaseId": "9a2955cca547cf3ae94965ba7e9216d3", "fullName": "tests.test_9_profile.TestProfile#test_check", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_9_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "47438-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_9_profile"}]}