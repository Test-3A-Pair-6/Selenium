{"name": "test_input_into_search_bar", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_8_announcements.TestAnnouncementNews object at 0x104bff380>\n\n    def test_input_into_search_bar(self):\n>       self.input_text_into_search_bar()\n\ntest_8_announcements.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_8_announcements.py:102: in input_text_into_search_bar\n    self.navigate_to_all_announcements()\ntest_8_announcements.py:40: in navigate_to_all_announcements\n    self.navigate_to_first_announcements_tab()\ntest_8_announcements.py:35: in navigate_to_first_announcements_tab\n    self.login()\ntest_8_announcements.py:31: in login\n    self.page.submit_button()\n../pages/page_8_announcements.py:57: in submit_button\n    self.login_button = Driver.wait(self.driver, By.XPATH, \"//button[@type=\\\"submit\\\"]\", \"click\", 50)\n../utils/Driver.py:16: in wait\n    return WebDriverWait(driver, timeout).until(ec.element_to_be_clickable((selector, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"942a38f3f277fee1337ff9f2941fbb14\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x104c742c0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1719782993341, "stop": 1719783043691, "uuid": "b8bd364e-29d0-4e46-b34f-6641805b05a4", "historyId": "a8d6994abb9fd62f3052ffb98ba1b5a2", "testCaseId": "a8d6994abb9fd62f3052ffb98ba1b5a2", "fullName": "tests.test_8_announcements.TestAnnouncementNews#test_input_into_search_bar", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_8_announcements"}, {"name": "subSuite", "value": "TestAnnouncementNews"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "37543-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_8_announcements"}]}