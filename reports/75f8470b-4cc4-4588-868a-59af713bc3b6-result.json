{"name": "test_add_certificate", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Cisco-PythonEssentials1', but got certificate1\nassert 'certificate1' == 'Cisco-PythonEssentials1'\n  \n  - Cisco-PythonEssentials1\n  + certificate1", "trace": "self = <test_certificate_crud.TestCertificateCRUD object at 0x000002995FDE6CC0>\nflag = False\n\n    def test_add_certificate(self, flag=False):\n        self.page.home()\n        self.page.user_name.send_keys(const.valid_user_name)\n        self.page.password.send_keys(const.valid_password)\n        self.driver.execute_script(\"window.scrollTo(0, 300);\")\n        sleep(30)\n        login_button = self.driver.find_element(By.XPATH, \"//button[@type='submit']\")\n        self.driver.execute_script(\"arguments[0].click();\", login_button)\n        WebDriverWait(self.driver, 20).until(EC.url_changes(\"https://tobeto.com/giris\"))\n        certificates = self.driver.get(\"https://tobeto.com/profilim/profilimi-duzenle/sertifikalarim\")\n        WebDriverWait(self.driver, 20).until(EC.url_changes(certificates))\n        name = self.driver.find_element(By.NAME, \"CertificateName\")\n        name.send_keys(const.certificateName, Keys.TAB)\n        WebDriverWait(self.driver, 20).until(\n            EC.visibility_of_element_located((By.CLASS_NAME, \"react-datepicker__year-text\"))\n        )\n        year_element = self.driver.find_element(By.XPATH, \"//div[contains(@class, 'react-datepicker__year-text') and text()='2023']\")\n        year_element.click()\n        file_input = self.driver.find_element(By.XPATH, \"//input[@class='uppy-Dashboard-input' and not(@webkitdirectory)]\")\n        file_input.send_keys(const.PDF)\n        uploaded_file_name_xpath = \"//p[contains(text(), 'Python_Essentials_1_Badge20240523-8-9tn7xa.pdf')]\"\n        WebDriverWait(self.driver, 60).until(\n            EC.presence_of_element_located((By.XPATH, uploaded_file_name_xpath))\n        )\n        btn = self.driver.find_element(By.CSS_SELECTOR, \"#__next > div > main > section > div > div > div.col-12.col-lg-9 > div.row > form > div.w-100.d-flex.justify-content-center > button\")\n        btn.click()\n        table_xpath = \"//div[contains(@class, 'table-responsive-sm')]//table\"\n        WebDriverWait(self.driver, 20).until(\n            EC.visibility_of_element_located((By.XPATH, table_xpath))\n        )\n    \n        # Verify the first element in the table\n        first_row_xpath = \"//div[contains(@class, 'table-responsive-sm')]//table/tbody/tr[1]/td[1]\"\n        first_row_element = self.driver.find_element(By.XPATH, first_row_xpath)\n>       assert first_row_element.text == \"Cisco-PythonEssentials1\", f\"Expected 'Cisco-PythonEssentials1', but got {first_row_element.text}\"\nE       AssertionError: Expected 'Cisco-PythonEssentials1', but got certificate1\nE       assert 'certificate1' == 'Cisco-PythonEssentials1'\nE         \nE         - Cisco-PythonEssentials1\nE         + certificate1\n\ntests\\test_certificate_crud.py:54: AssertionError"}, "start": 1718402794715, "stop": 1718402829034, "uuid": "33a3d56b-4bbd-438e-9daf-95fe290496e6", "historyId": "4733ab432abe63f71abdf02f2db86c61", "testCaseId": "4733ab432abe63f71abdf02f2db86c61", "fullName": "tests.test_certificate_crud.TestCertificateCRUD#test_add_certificate", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_certificate_crud"}, {"name": "subSuite", "value": "TestCertificateCRUD"}, {"name": "host", "value": "chiturca"}, {"name": "thread", "value": "20884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_certificate_crud"}]}