{"name": "test_social_media_update_and_remove", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: target frame detached\n  (Session info: chrome=125.0.6422.142)\nStacktrace:\n\tGetHandleVerifier [0x00007FF62E2E1F52+60322]\n\t(No symbol) [0x00007FF62E25CEC9]\n\t(No symbol) [0x00007FF62E117CE9]\n\t(No symbol) [0x00007FF62E1003B1]\n\t(No symbol) [0x00007FF62E0FE39D]\n\t(No symbol) [0x00007FF62E0FEBAF]\n\t(No symbol) [0x00007FF62E11BAAF]\n\t(No symbol) [0x00007FF62E11C5D3]\n\t(No symbol) [0x00007FF62E120641]\n\t(No symbol) [0x00007FF62E1205A0]\n\t(No symbol) [0x00007FF62E1206E0]\n\t(No symbol) [0x00007FF62E16733B]\n\t(No symbol) [0x00007FF62E16773C]\n\t(No symbol) [0x00007FF62E1AE967]\n\t(No symbol) [0x00007FF62E18C25F]\n\t(No symbol) [0x00007FF62E1ABC80]\n\t(No symbol) [0x00007FF62E18BFC3]\n\t(No symbol) [0x00007FF62E159617]\n\t(No symbol) [0x00007FF62E15A211]\n\tGetHandleVerifier [0x00007FF62E5F94AD+3301629]\n\tGetHandleVerifier [0x00007FF62E6436D3+3605283]\n\tGetHandleVerifier [0x00007FF62E639450+3563680]\n\tGetHandleVerifier [0x00007FF62E394326+790390]\n\t(No symbol) [0x00007FF62E26750F]\n\t(No symbol) [0x00007FF62E263404]\n\t(No symbol) [0x00007FF62E263592]\n\t(No symbol) [0x00007FF62E252F9F]\n\tBaseThreadInitThunk [0x00007FFDE1F77344+20]\n\tRtlUserThreadStart [0x00007FFDE3E826B1+33]", "trace": "self = <test_social_media.TestSocialMedia object at 0x000001D95B42E570>\n\n    def test_social_media_update_and_remove(self):\n>       self.prc_social_media()\n\ntest_social_media.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_social_media.py:31: in prc_social_media\n    login_button = self.driver.find_element(By.XPATH, \"//button[@type=\\\"submit\\\"]\")\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D958F54E60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"target frame detached\",\"message\":\"target frame detached\\\\n  (Session info...07FF62E252F9F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFDE1F77344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFDE3E826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: target frame detached\nE         (Session info: chrome=125.0.6422.142)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62E2E1F52+60322]\nE       \t(No symbol) [0x00007FF62E25CEC9]\nE       \t(No symbol) [0x00007FF62E117CE9]\nE       \t(No symbol) [0x00007FF62E1003B1]\nE       \t(No symbol) [0x00007FF62E0FE39D]\nE       \t(No symbol) [0x00007FF62E0FEBAF]\nE       \t(No symbol) [0x00007FF62E11BAAF]\nE       \t(No symbol) [0x00007FF62E11C5D3]\nE       \t(No symbol) [0x00007FF62E120641]\nE       \t(No symbol) [0x00007FF62E1205A0]\nE       \t(No symbol) [0x00007FF62E1206E0]\nE       \t(No symbol) [0x00007FF62E16733B]\nE       \t(No symbol) [0x00007FF62E16773C]\nE       \t(No symbol) [0x00007FF62E1AE967]\nE       \t(No symbol) [0x00007FF62E18C25F]\nE       \t(No symbol) [0x00007FF62E1ABC80]\nE       \t(No symbol) [0x00007FF62E18BFC3]\nE       \t(No symbol) [0x00007FF62E159617]\nE       \t(No symbol) [0x00007FF62E15A211]\nE       \tGetHandleVerifier [0x00007FF62E5F94AD+3301629]\nE       \tGetHandleVerifier [0x00007FF62E6436D3+3605283]\nE       \tGetHandleVerifier [0x00007FF62E639450+3563680]\nE       \tGetHandleVerifier [0x00007FF62E394326+790390]\nE       \t(No symbol) [0x00007FF62E26750F]\nE       \t(No symbol) [0x00007FF62E263404]\nE       \t(No symbol) [0x00007FF62E263592]\nE       \t(No symbol) [0x00007FF62E252F9F]\nE       \tBaseThreadInitThunk [0x00007FFDE1F77344+20]\nE       \tRtlUserThreadStart [0x00007FFDE3E826B1+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "start": 1717793485439, "stop": 1717793493370, "uuid": "00c9650f-555d-420c-a986-4886d4e2d0df", "historyId": "93d1666606ccdf93f621092b650b7606", "testCaseId": "93d1666606ccdf93f621092b650b7606", "fullName": "tests.test_social_media.TestSocialMedia#test_social_media_update_and_remove", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_social_media"}, {"name": "subSuite", "value": "TestSocialMedia"}, {"name": "host", "value": "Ercan"}, {"name": "thread", "value": "7024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_social_media"}]}